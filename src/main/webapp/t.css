/*
  Project name(项目名称)：CSS_text_formatting 
  File name(文件名): t
  Author(作者）: mao
  Author QQ：1296193245
  GitHub：https://github.com/maomao124/
  Date(创建日期)： 2022/1/26 
  Time(创建时间)： 19:28
  Version(版本): 1.0
  Description(描述)：
  text-align：设置文本的水平对齐方式；
text-decoration：设置文本的装饰；
text-transform：设置文本中英文的大小写转换方式；
text-indent：设置文本的缩进方式；
line-height：设置行高；
letter-spacing：设置字符间距；
word-spacing：设置单词与单词之间的间距（对中文无效）；
text-shadow：设置文本阴影；
vertical-align：设置文本的垂直对齐方式；
white-space：设置文本中空白的处理方式；
direction：设置文本方向。


1. text-align
text-align 属性用来设置元素中文本的水平对齐方式，属性的可选值如下：
值	        描述
left	默认值，左对齐
right	右对齐
center	居中对齐
justify	两端对齐
inherit	从父元素继承 text-align 属性的值


2. text-decoration
text-decoration 属性用于设置或删除文本的装饰，最常用的做法就是使用 text-decoration 属性来删除<a>标签的默认下划线。
当然了，使用 text-decoration 属性也可以在需要的地方为元素中的文本添加一些装饰，达到突出显示的效果。
值	        描述
none	默认值，标准文本，没有额外装饰，可以用来删除已有的文本装饰
underline	在文本下方添加一条下滑线
overline	在文本上方添加一条上滑线
line-through	在文本的中间定义一条横向贯穿文本的线（类似于删除线）
blink	定义闪烁的文本（目前主流浏览器不再支持）
inherit	从父元素继承 text-decoration 属性的值


3. text-transform
text-transform 属性用来控制文本中英文字母的大小写，通过该属性您可以在不修改原文的基础上，将文本中的英文统一更改为小写字母、大写字母或者首字母大写的形式。
值	        描述
none	默认值，以原文显示，对文本中的英文不做更改
capitalize	将文本中的每个单词更改为以大写字母开头的形式
uppercase	将文本中的英文字母全部更改为大写
lowercase	将文本中的英文字母全部更改为小写
inherit	从父元素继承 text-transform 属性的值


4. text-indent
text-indent 属性用来为元素中的文本添加首行缩进的效果
值	        描述
length	以固定的值加单位的形式（例如 2em）定义缩进距离，默认值为 0
%	以基于父元素宽度的百分比来定义缩进距离
inherit	从父元素继承 text-indent 属性的值


5. line-height
line-height 属性用来设置文本的行高
值	        描述
normal	默认值，使用默认的行高，不对行高进行额外设置
number	以具体的数字设置行高，这个数字会与当前的字体大小相乘，并将得到的值设置为行高
length	以数字加单位的形式设置固定的行高
%	以百分比的形式设置基于当前字体尺寸百分比的行高
inherit	从父元素继承 line-height 属性的值


6. letter-spacing
letter-spacing 属性用来设置字符之间的间距
值	    描述
normal	默认值，表示字符之间没有额外的间距
length	以数值加单位的形式设置字符之间的固定间距（允许使用负值）
inherit	从父元素继承 letter-spacing 属性的值


7. word-spacing
word-spacing 属性用来设置单词与单词之间的间距，但对中文无效
值       	描述
normal	默认值，表示单词与单词之间没有额外的间距
length	以数值加单位的形式设置单词与单词之间的固定间距（允许使用负值）
inherit	从父元素继承 word-spacing 属性的值


8. text-shadow
text-shadow 属性用来为文本添加阴影及模糊效果，属性的语法格式如下：
text-shadow: h-shadow v-shadow blur color;
语法说明如下：
h-shadow：必填值，设置阴影的水平位置，允许为负值；
v-shadow：必填值，设置阴影的垂直位置，允许为负值；
blur：可选值，设置模糊的距离；
color：可选值，设置阴影的颜色。


9. vertical-align
vertical-align 属性用来定义元素内文本的垂直对齐方式
值	        描述
baseline	默认值，将元素的基线与父元素的基线对齐
sub	下标对齐，将元素的基线相对于父元素的基线降低
super	上标对齐，将元素的基线相对于父元素的基线升高
top	顶部对齐，将元素行内框的顶端与行框的顶端对齐
text-top	文本顶部对齐，把元素的顶端与父元素字体的顶端对齐
middle	居中对齐，通常使用在图片上，将图片垂直方向的中线与文本的中线（文字元素行内框的中线）对齐
bottom	底部对齐，将元素行内框的顶端与行框的底端对齐
text-bottom	文本底部对齐，是将元素行内框的底端与行框的底线对齐
length	以数字加单位的形式设置元素基线距离父元素基线的距离（可以为负值）
%	使用 "line-height" 属性的百分比值来排列此元素，允许使用负值
inherit	从父元素继承 vertical-align 属性的值
顶线：中文汉字的上边沿；
中线：贯穿小写英文字母 x 中间的线；
基线：小写英文字母 x 的下边沿；
底线：中文汉字的下边沿；
内容区：指底线与顶线包裹的区域；
行高：包括内容区与以内容区为基础对称拓展的空白区域，我们称之为行高，也可以认为是相邻文本行基线间的距离；
行距：指相邻文本行间上一个文本行底线和下一文本行顶线之间的距离；
行内框：是一个浏览器渲染模型中的概念，无法显示出来，但是它又确实存在，它的高度与行高相同；
行框：同行内框类似的概念，行框是指本行的一个虚拟的矩形框，也是浏览器渲染模式中的一个概念。行框高度等于本行内所有元素中行内框最大的值
    （以行高值最大的行内框为基准，其他行内框采用自己的对齐方式向基准对齐，最终计算行框的高度）。



10. white-space
white-space 属性用来设置如何处理元素内的空白
值   	描述
normal	默认值，忽略文本中的空白
pre	保留文本中的空白，类似于<pre>标签的效果
nowrap	文本会在一行中显示，不会自动换行，直到遇到<br>标签为止
pre-wrap	保留文本中的空白，但是正常地进行换行
pre-line	合并文本中的空白，但是保留换行符
inherit	从父元素继承 white-space 属性的值


11. direction
direction 属性用来设置文本的方向
值	描述
ltr	默认值，文本按从左到右的方向输出
rtl	文本按从右到左的方向输出
inherit	从父元素继承 direction 属性的值
 */


p {
    border: 1px solid greenyellow; /*为了能更直观的体现出文本的对齐方式，这里给p标签设置一个边框*/
}

.text1 {
    text-align: left;
}

.text2 {
    text-align: right;
}

.text3 {
    /*width: 60px;*/
    text-align: center;
}

.text4 {
    width: 60px;
    text-align: justify;
}


.none {
    text-decoration: none;
}

.underline {
    text-decoration: underline;
}

.overline {
    text-decoration: overline;
}

.line-through {
    text-decoration: line-through;
}

.blink {
    text-decoration: blink;
}


.uppercase {
    text-transform: uppercase;
}

.lowercase {
    text-transform: lowercase;
}

.capitalize {
    text-transform: capitalize;
}


p.small {
    line-height: 0.8;
}

p.big {
    line-height: 200%;
}


p.t7 {
    word-spacing: 10px;
}


p.t9_normal {
    white-space: normal;
}

p.t9_pre {
    white-space: pre;
}


.ltr {
    direction: ltr;
}

.rtl {
    direction: rtl;
}

